# docker-compose to deploy website monitoring tool in production

version: "3.8"

services:
  db: # PostgreSQL database
    image: postgres:alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: changeme # Change before running in production
    volumes: # Volume to have permanent data
      - ./init_db.sql:/docker-entrypoint-initdb.d/init.sql
      - wmt-db:/var/lib/postgresql/data
  api: # API service
    build:
      context: ./api
      dockerfile: Dockerfile-prod
    ports:
      - 5000:5000
    depends_on:
      - db # Requires DB to communicate with
    environment:
      DOCKER: "true" # To enable Postgresql database in the API
      DB_USER: postgres # should match POSTGRES_USER
      DB_NAME: postgres # should match POSTGRES_DB
      DB_HOST: website-monitoring-tool_db_1
      DB_PASSWORD: changeme # should match POSTGRES_PASSWORD
      TZ: Europe/Paris
    restart: always
  collector: # Service to collect metrics
    build: ./collector
    depends_on:
      - api
      - db
    environment:
      SLEEP_TIME: 1
      MIN_COLLECT_TIME: 5
      TIMEOUT: 1
      POOL_SIZE: 4
      API_URL: http://website-monitoring-tool_api_1:5000
      WEBSITES_ENDPOINT: /websites/
      LAST_CHECK_ENDPOINT: lastcheck/
      METRICS_ENDPOINT: /metrics/
      TZ: Europe/Paris
    restart: always
  watchdog: # Service to create alerts
    build: ./watchdog
    depends_on:
      - api
      - db
    environment:
      SLEEP_TIME: 1
      MIN_CHECK_INTERVAL: 15
      API_URL: http://website-monitoring-tool_api_1:5000
      STATS_ENDPOINT: /stats/
      ALERTS_ENDPOINT: /alerts/
      WATCH_OVER: 120
      ALERT_THRESHOLD: 0.8
      TZ: Europe/Paris
    restart: always

volumes:
  wmt-db: